# AI Companion Testing Configuration
# Comprehensive test configuration for advanced AI companion system

# AI Companion Test Suites
companion_test_suites:
  personality_consistency:
    enabled: true
    timeout: 1800  # 30 minutes
    parallel: false
    markers: ["personality", "core"]
    description: "Personality consistency validation across sessions and interactions"

  emotional_intelligence:
    enabled: true
    timeout: 2400  # 40 minutes
    parallel: false
    markers: ["emotion", "ai", "core"]
    description: "Emotional response accuracy and appropriateness testing"

  memory_systems:
    enabled: true
    timeout: 1200  # 20 minutes
    parallel: true
    markers: ["memory", "core"]
    description: "Memory retention, retrieval, and privacy validation"

  voice_synthesis:
    enabled: true
    timeout: 3600  # 60 minutes (GPU intensive)
    parallel: false
    markers: ["voice", "rtx4090", "performance"]
    description: "Voice quality, emotion, and synchronization testing"

  avatar_rendering:
    enabled: true
    timeout: 3600  # 60 minutes (GPU intensive)
    parallel: false
    markers: ["avatar", "3d", "rtx4090", "performance"]
    description: "3D avatar rendering, expressions, and real-time performance"

  conversation_flow:
    enabled: true
    timeout: 2700  # 45 minutes
    parallel: false
    markers: ["conversation", "ux"]
    description: "Natural conversation flow and context awareness"

  professional_interaction:
    enabled: true
    timeout: 1800  # 30 minutes
    parallel: true
    markers: ["professional", "workflow", "integration"]
    description: "Professional role adaptation and workflow integration"

  companion_osint_integration:
    enabled: true
    timeout: 4200  # 70 minutes
    parallel: false
    markers: ["integration", "osint", "workflow"]
    description: "Seamless integration with OSINT platform workflows"

  autonomous_research:
    enabled: true
    timeout: 3000  # 50 minutes
    parallel: false
    markers: ["autonomous", "research", "ai"]
    description: "Proactive research capabilities and swarm coordination"

  security_privacy:
    enabled: true
    timeout: 2400  # 40 minutes
    parallel: false
    markers: ["security", "privacy", "encryption"]
    description: "Personal data protection and privacy validation"

# AI Companion Performance Targets
companion_performance_targets:
  # Personality & Memory
  personality_consistency_score: 0.90  # 90% consistency across sessions
  memory_retention_accuracy: 0.95      # 95% accuracy for key preferences
  emotional_state_prediction: 0.85     # 85% accuracy in emotion prediction

  # Real-time Interaction
  conversation_response_time_ms: 2000   # <2 seconds for responses
  avatar_emotion_sync_latency_ms: 100   # <100ms for emotion sync
  voice_synthesis_latency_ms: 500       # <500ms for voice generation
  voice_avatar_sync_latency_ms: 100     # <100ms synchronization

  # RTX 4090 Performance
  gpu_utilization_efficiency: 0.85      # >85% GPU efficiency
  concurrent_companion_sessions: 10     # Support 10+ concurrent users
  thermal_threshold_celsius: 83         # <83Â°C under sustained load
  power_consumption_watts: 400          # <400W average consumption

  # System Integration
  osint_performance_impact: 0.10        # <10% performance degradation
  database_query_latency_ms: 10         # <10ms for companion data
  memory_storage_efficiency_mb: 500     # <500MB per active session

  # User Experience
  voice_quality_rating: 4.0             # >4/5 subjective quality
  conversation_naturalness: 4.5         # >4.5/5 naturalness rating
  avatar_expression_accuracy: 0.90      # 90% accurate emotional expression
  professional_interaction_rating: 4.5   # >4.5/5 professional effectiveness

  # Autonomous & Research
  proactive_suggestion_accuracy: 0.75   # 75% user acceptance of suggestions
  autonomous_research_success: 0.80     # 80% successful completion
  swarm_coordination_efficiency: 0.90   # 90% efficient task coordination
  research_prediction_accuracy: 0.70    # 70% relevance of predictions

# Test Data Configuration
companion_test_data:
  # Personality Test Scenarios
  personality_personas:
    professional_cybersecurity:
      traits:
        openness: 0.7
        conscientiousness: 0.9
        extraversion: 0.6
        agreeableness: 0.8
        neuroticism: 0.3
      interaction_style: "formal_expert"
      cybersecurity_expertise: 9

    friendly_assistant:
      traits:
        openness: 0.8
        conscientiousness: 0.8
        extraversion: 0.9
        agreeableness: 0.9
        neuroticism: 0.2
      interaction_style: "casual_supportive"
      cybersecurity_expertise: 7

    analytical_researcher:
      traits:
        openness: 0.9
        conscientiousness: 0.8
        extraversion: 0.4
        agreeableness: 0.7
        neuroticism: 0.4
      interaction_style: "analytical_detailed"
      cybersecurity_expertise: 8

  # Emotional Test Scenarios
  emotional_scenarios:
    - scenario: "user_frustration_complex_investigation"
      expected_response: "empathetic_supportive"
      triggers: ["slow progress", "complex data", "time pressure"]

    - scenario: "user_excitement_major_discovery"
      expected_response: "enthusiastic_congratulatory"
      triggers: ["breakthrough", "successful analysis", "validation"]

    - scenario: "user_confusion_technical_complexity"
      expected_response: "patient_explanatory"
      triggers: ["technical jargon", "complex concepts", "overwhelm"]

    - scenario: "user_stress_security_incident"
      expected_response: "calm_focused"
      triggers: ["urgent threat", "critical timeline", "high stakes"]

  # Conversation Test Data
  conversation_contexts:
    cybersecurity_investigation:
      sample_queries:
        - "Can you help me analyze this suspicious network traffic?"
        - "I need to investigate a potential data breach"
        - "What's the best approach for threat hunting in this environment?"
      expected_context_retention: ["investigation_type", "target_systems", "timeline"]

    research_workflow:
      sample_queries:
        - "Let's start investigating this threat actor group"
        - "I want to track cryptocurrency transactions from this address"
        - "Can you help me correlate these IOCs across sources?"
      expected_proactive_suggestions: ["related_investigations", "data_sources", "analysis_techniques"]

  # Voice Synthesis Test Data
  voice_test_phrases:
    technical_content:
      - "The intrusion detection system has identified a potential advanced persistent threat"
      - "Cross-referencing indicators of compromise across multiple threat intelligence feeds"
      - "Analyzing the attack vector shows exploitation of CVE-2023-4567"

    emotional_content:
      - "I understand this investigation is really important to you"
      - "That's an excellent discovery! This could be a significant breakthrough"
      - "I can see you're feeling overwhelmed. Let's break this down step by step"

    conversational_content:
      - "What would you like to focus on next in our investigation?"
      - "I noticed some interesting patterns in the data we just analyzed"
      - "Based on your previous work, I think you might find this approach helpful"

  # Performance Test Scenarios
  performance_test_scenarios:
    concurrent_conversations:
      user_count: [1, 5, 10, 15, 20]
      conversation_length: [10, 50, 100]  # messages per conversation
      complexity_levels: ["simple", "moderate", "complex"]

    gpu_intensive_operations:
      avatar_rendering_complexity: ["basic", "detailed", "photorealistic"]
      voice_synthesis_load: ["single", "multiple", "concurrent"]
      emotion_processing_depth: ["surface", "deep", "contextual"]

    memory_intensive_scenarios:
      conversation_history_length: [100, 1000, 10000]  # messages
      user_preference_complexity: ["basic", "detailed", "comprehensive"]
      context_retention_depth: ["immediate", "session", "long_term"]

# Infrastructure Requirements for Testing
companion_test_infrastructure:
  required_gpu:
    model: "RTX 4090"
    memory_gb: 24
    compute_capability: "8.9"
    cuda_version: "12.0+"

  required_services:
    - companion_personality_engine
    - companion_memory_manager
    - avatar_controller_enhanced
    - voice_synthesis_service
    - emotion_processing_engine
    - conversation_engine
    - osint_integration_layer

  database_requirements:
    postgresql_schemas: ["companion_personality", "companion_memory", "companion_interactions"]
    test_data_size_gb: 5
    concurrent_connections: 50

  network_requirements:
    websocket_connections: 20
    api_endpoints: 15
    real_time_streaming: true

# Test Execution Configuration
companion_execution_config:
  # Test Environment Setup
  setup_procedures:
    gpu_initialization:
      - "nvidia-smi --reset-gpus"
      - "nvidia-ml-py3 initialization"
      - "CUDA context creation"

    service_validation:
      - "companion service health check"
      - "database connection validation"
      - "avatar system initialization"
      - "voice synthesis engine warmup"

    test_data_preparation:
      - "generate personality test profiles"
      - "create conversation scenarios"
      - "prepare voice synthesis samples"
      - "initialize memory test data"

  # Quality Gates
  quality_gates:
    personality_validation:
      min_consistency_score: 0.85
      max_deviation_percent: 15

    performance_validation:
      max_response_latency_ms: 3000
      min_gpu_efficiency: 0.80
      max_memory_usage_gb: 8

    integration_validation:
      osint_compatibility: 1.0  # 100% compatibility required
      api_backward_compatibility: 1.0

    user_experience_validation:
      min_voice_quality: 3.5
      min_conversation_rating: 4.0
      min_professional_effectiveness: 4.0

# Reporting Configuration
companion_reporting:
  output_formats: ["json", "html", "pdf"]
  include_performance_graphs: true
  include_user_experience_metrics: true
  include_gpu_utilization_charts: true

  dashboard_metrics:
    real_time:
      - "companion_response_latency"
      - "gpu_utilization_percentage"
      - "active_companion_sessions"
      - "memory_usage_current"

    historical:
      - "personality_consistency_trends"
      - "voice_quality_improvements"
      - "user_satisfaction_trends"
      - "performance_benchmarks"

  alert_thresholds:
    critical:
      response_latency_ms: 5000
      gpu_temperature_celsius: 85
      memory_usage_percent: 90

    warning:
      response_latency_ms: 3000
      gpu_temperature_celsius: 80
      memory_usage_percent: 75

# Integration with Existing Test Framework
existing_integration:
  extend_prometheus_metrics:
    - "companion_personality_consistency"
    - "companion_emotional_accuracy"
    - "companion_voice_synthesis_quality"
    - "companion_avatar_performance"
    - "companion_osint_integration_success"

  extend_grafana_dashboards:
    - "AI Companion Performance Overview"
    - "GPU Utilization for Companion Workloads"
    - "User Experience Metrics"
    - "Companion-OSINT Integration Health"

  pytest_markers:
    companion_core: "Core AI companion functionality"
    companion_performance: "Performance and resource utilization"
    companion_ux: "User experience and interaction quality"
    companion_integration: "Integration with existing platform"
    companion_security: "Security and privacy validation"