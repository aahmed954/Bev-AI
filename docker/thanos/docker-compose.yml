version: '3.8'

# THANOS Production Server (100.122.12.54)
# Primary AI Infrastructure & Databases

services:
  # PostgreSQL with pgvector
  postgres:
    image: ankane/pgvector:latest
    container_name: bev_postgres
    environment:
      POSTGRES_DB: bev_research
      POSTGRES_USER: research_admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-defaultpass123}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bev_network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: bev_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bev_network

  # Neo4j graph database  
  neo4j:
    image: neo4j:5
    container_name: bev_neo4j
    environment:
      NEO4J_AUTH: neo4j/${NEO4J_PASSWORD:-defaultpass123}
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    networks:
      - bev_network

  # Qdrant vector database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: bev_qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - bev_network

  # Apache Airflow
  airflow:
    image: apache/airflow:2.8.0
    container_name: bev_airflow
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://research_admin:${POSTGRES_PASSWORD:-defaultpass123}@postgres/bev_research
    ports:
      - "8080:8080"
    volumes:
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
    networks:
      - bev_network

  # RabbitMQ messaging
  rabbitmq:
    image: rabbitmq:3-management
    container_name: bev_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - bev_network

  # Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bev_prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - bev_network

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: bev_grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - bev_network

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  qdrant_data:
  airflow_logs:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

networks:
  bev_network:
    driver: bridge
