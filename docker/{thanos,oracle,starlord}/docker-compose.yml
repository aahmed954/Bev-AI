version: '3.8'

services:
  # ==================== RABBITMQ CLUSTER ====================
  rabbitmq-1:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-1
    hostname: rabbitmq-1
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=BevAttack2024!
      - RABBITMQ_ERLANG_COOKIE=BevClusterCookie
    volumes:
      - rabbitmq1_data:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - bev_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq-2:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-2
    hostname: rabbitmq-2
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=BevAttack2024!
      - RABBITMQ_ERLANG_COOKIE=BevClusterCookie
    volumes:
      - rabbitmq2_data:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - bev_network
    depends_on:
      - rabbitmq-1
    command: >
      bash -c "rabbitmqctl stop_app &&
               rabbitmqctl reset &&
               rabbitmqctl join_cluster rabbit@rabbitmq-1 &&
               rabbitmqctl start_app"

  rabbitmq-3:
    image: rabbitmq:3.12-management
    container_name: rabbitmq-3
    hostname: rabbitmq-3
    ports:
      - "5674:5672"
      - "15674:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=BevAttack2024!
      - RABBITMQ_ERLANG_COOKIE=BevClusterCookie
    volumes:
      - rabbitmq3_data:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - bev_network
    depends_on:
      - rabbitmq-2
    command: >
      bash -c "rabbitmqctl stop_app &&
               rabbitmqctl reset &&
               rabbitmqctl join_cluster rabbit@rabbitmq-1 &&
               rabbitmqctl start_app"

  # ==================== KAFKA CLUSTER ====================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - bev_network

  kafka-1:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_COMPRESSION_TYPE: lz4
    volumes:
      - kafka1_data:/var/lib/kafka/data
    networks:
      - bev_network

  kafka-2:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_COMPRESSION_TYPE: lz4
    volumes:
      - kafka2_data:/var/lib/kafka/data
    networks:
      - bev_network

  kafka-3:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_COMPRESSION_TYPE: lz4
    volumes:
      - kafka3_data:/var/lib/kafka/data
    networks:
      - bev_network

  # ==================== NEO4J GRAPH DATABASE ====================
  neo4j:
    image: neo4j:5.12-enterprise
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/BevGraph2024!
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_dbms_connector_bolt_advertised__address=localhost:7687
      - NEO4J_dbms_connector_http_advertised__address=localhost:7474
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins
      - ./scripts/neo4j_init.cypher:/import/init.cypher
    networks:
      - bev_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "BevGraph2024!", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==================== POSTGRESQL WITH PGVECTOR ====================
  postgres:
    image: pgvector/pgvector:pg16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=bevattack
      - POSTGRES_PASSWORD=BevDB2024!
      - POSTGRES_DB=research_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bevattack"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ==================== REDIS CLUSTER ====================
  redis-master:
    image: redis:7-alpine
    container_name: redis-master
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass BevCache2024!
    volumes:
      - redis_data:/data
    networks:
      - bev_network

  redis-slave-1:
    image: redis:7-alpine
    container_name: redis-slave-1
    ports:
      - "6380:6379"
    command: redis-server --slaveof redis-master 6379 --requirepass BevCache2024! --masterauth BevCache2024!
    depends_on:
      - redis-master
    networks:
      - bev_network

  redis-slave-2:
    image: redis:7-alpine
    container_name: redis-slave-2
    ports:
      - "6381:6379"
    command: redis-server --slaveof redis-master 6379 --requirepass BevCache2024! --masterauth BevCache2024!
    depends_on:
      - redis-master
    networks:
      - bev_network

  # ==================== INFLUXDB TIME SERIES ====================
  influxdb:
    image: influxdb:2.7-alpine
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=bevattack
      - DOCKER_INFLUXDB_INIT_PASSWORD=BevMetrics2024!
      - DOCKER_INFLUXDB_INIT_ORG=BevAttack
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=BevToken2024!
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - bev_network

  # ==================== ELASTICSEARCH ====================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=bev-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - bev_network

  # ==================== PROMETHEUS MONITORING ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - bev_network

  # ==================== GRAFANA DASHBOARDS ====================
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=BevDash2024!
      - GF_INSTALL_PLUGINS=redis-datasource,influxdb-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - influxdb
    networks:
      - bev_network

  # ==================== AIRFLOW ORCHESTRATION ====================
  airflow-postgres:
    image: postgres:14
    container_name: airflow-postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - airflow_postgres_data:/var/lib/postgresql/data
    networks:
      - bev_network

  airflow-redis:
    image: redis:7-alpine
    container_name: airflow-redis
    ports:
      - "6382:6379"
    networks:
      - bev_network

  airflow-webserver:
    image: apache/airflow:2.7.2
    container_name: airflow-webserver
    depends_on:
      - airflow-postgres
      - airflow-redis
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@airflow-redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY='ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=BevAirflow2024!
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    networks:
      - bev_network
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.7.2
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@airflow-redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY='ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    networks:
      - bev_network

  airflow-worker:
    image: apache/airflow:2.7.2
    container_name: airflow-worker
    depends_on:
      - airflow-scheduler
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@airflow-redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY='ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - DUMB_INIT_SETSID=0
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: celery worker
    networks:
      - bev_network

  airflow-flower:
    image: apache/airflow:2.7.2
    container_name: airflow-flower
    depends_on:
      - airflow-worker
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@airflow-postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://:@airflow-redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY='ZmDfcTF7_60GrrY167zsiPd67pEvs0aGOv2oasOM1Pg='
    ports:
      - "5555:5555"
    command: celery flower
    networks:
      - bev_network

  # ==================== N8N WORKFLOW AUTOMATION ====================
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=BevN8N2024!
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://localhost:5678/
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=bevattack
      - DB_POSTGRESDB_PASSWORD=BevDB2024!
    volumes:
      - n8n_data:/home/node/.n8n
      - ./config/n8n-workflows.json:/home/node/workflows.json
    depends_on:
      - postgres
    networks:
      - bev_network

  # ==================== TOR PROXY FOR DARKNET ====================
  tor-proxy:
    image: dperson/torproxy:latest
    container_name: tor-proxy
    ports:
      - "9050:9050"  # SOCKS5
      - "9051:9051"  # Control port
      - "8118:8118"  # Privoxy HTTP
    environment:
      - PASSWORD=BevTor2024!
    networks:
      - bev_network
    restart: unless-stopped

networks:
  bev_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  rabbitmq1_data:
  rabbitmq2_data:
  rabbitmq3_data:
  zookeeper_data:
  zookeeper_logs:
  kafka1_data:
  kafka2_data:
  kafka3_data:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins:
  postgres_data:
  redis_data:
  influxdb_data:
  influxdb_config:
  elasticsearch_data:
  prometheus_data:
  grafana_data:
  airflow_postgres_data:
  n8n_data:
