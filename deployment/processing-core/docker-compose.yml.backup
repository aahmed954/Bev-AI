version: '3.8'

# BEV OSINT Framework - Processing Core Node
# Contains IntelOwl platform and core OSINT processing capabilities
# Requires: Data Core node (databases) and Message Infrastructure node (RabbitMQ)
# Resource Requirements: 16+ GB RAM, moderate to high CPU

x-default-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  # =====================================================
  # INTELOWL PROCESSING SERVICES
  # =====================================================

  # IntelOwl Django Application
  intelowl-django:
    image: intelowlproject/intelowl:v5.2.0
    container_name: bev_processing_intelowl_django
    restart: always
    environment:
      # Django Configuration
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG:-False}
      - DEFAULT_FROM_EMAIL=bev-osint@${DOMAIN_NAME:-localhost}
      - DEFAULT_EMAIL=bev@${DOMAIN_NAME:-localhost}

      # External Database Connections (Data Core Node)
      - POSTGRES_HOST=${DATA_CORE_POSTGRES_HOST}
      - POSTGRES_DB=${INTELOWL_POSTGRES_DB}
      - POSTGRES_USER=${INTELOWL_POSTGRES_USER}
      - POSTGRES_PASSWORD=${INTELOWL_POSTGRES_PASSWORD}
      - POSTGRES_PORT=${DATA_CORE_POSTGRES_PORT:-5432}

      # External Redis Connection (Data Core Node)
      - REDIS_URL=redis://:${DATA_CORE_REDIS_PASSWORD}@${DATA_CORE_REDIS_HOST}:${DATA_CORE_REDIS_PORT:-6379}/1

      # External RabbitMQ Connection (Message Infrastructure Node)
      - CELERY_BROKER_URL=amqp://${MSG_RABBITMQ_USER}:${MSG_RABBITMQ_PASSWORD}@${MSG_RABBITMQ_HOST}:${MSG_RABBITMQ_PORT:-5672}

      # IntelOwl Security Settings
      - DISABLE_AUTHENTICATION_CHECKS=${DISABLE_AUTH_CHECKS:-True}
      - DISABLE_PERMISSIONS_CHECKS=${DISABLE_PERM_CHECKS:-True}
      - DISABLE_THROTTLING=${DISABLE_THROTTLING:-True}

      # Worker Configuration
      - WORKERS=${WORKERS:-4}
      - THREADS_PER_WORKER=${THREADS_PER_WORKER:-4}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-300}

      # External Graph Database (Data Core Node)
      - NEO4J_URI=${DATA_CORE_NEO4J_URI}
      - NEO4J_USER=${DATA_CORE_NEO4J_USER}
      - NEO4J_PASSWORD=${DATA_CORE_NEO4J_PASSWORD}

      # API Keys for OSINT Services
      - SHODAN_API_KEY=${SHODAN_API_KEY}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - DEHASHED_API_KEY=${DEHASHED_API_KEY}
      - DEHASHED_EMAIL=${DEHASHED_EMAIL}
      - SNUSBASE_API_KEY=${SNUSBASE_API_KEY}
      - WELEAKINFO_API_KEY=${WELEAKINFO_API_KEY}

    volumes:
      # Custom analyzers and connectors
      - ./intelowl/custom_analyzers:/opt/deploy/intelowl/custom_analyzers:ro
      - ./intelowl/custom_connectors:/opt/deploy/intelowl/custom_connectors:ro

      # BEV source code integration
      - ../../src:/opt/bev_src:ro

      # Static files and themes
      - intelowl_static_data:/opt/deploy/static
      - ./intelowl/dark_theme.css:/opt/deploy/static/css/custom.css:ro

      # Logs
      - ./logs:/var/log/intelowl

    command: >
      sh -c "
      echo 'Waiting for external databases...' &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py createsuperuser --noinput --username admin --email admin@${DOMAIN_NAME:-localhost} || true &&
      echo 'Starting IntelOwl Django application...' &&
      gunicorn intel_owl.wsgi:application
        --bind 0.0.0.0:8000
        --workers ${WORKERS:-4}
        --threads ${THREADS_PER_WORKER:-4}
        --timeout ${REQUEST_TIMEOUT:-300}
        --access-logfile -
        --error-logfile -"

    ports:
      - "${INTELOWL_DJANGO_PORT:-8000}:8000"

    networks:
      - processing_core

    logging: *default-logging

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # IntelOwl Celery Beat Scheduler
  intelowl-celery-beat:
    image: intelowlproject/intelowl:v5.2.0
    container_name: bev_processing_celery_beat
    restart: always
    environment:
      # Django Configuration
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}

      # External Database Connections
      - POSTGRES_HOST=${DATA_CORE_POSTGRES_HOST}
      - POSTGRES_DB=${INTELOWL_POSTGRES_DB}
      - POSTGRES_USER=${INTELOWL_POSTGRES_USER}
      - POSTGRES_PASSWORD=${INTELOWL_POSTGRES_PASSWORD}
      - POSTGRES_PORT=${DATA_CORE_POSTGRES_PORT:-5432}

      # External Redis Connection
      - REDIS_URL=redis://:${DATA_CORE_REDIS_PASSWORD}@${DATA_CORE_REDIS_HOST}:${DATA_CORE_REDIS_PORT:-6379}/1

      # External RabbitMQ Connection
      - CELERY_BROKER_URL=amqp://${MSG_RABBITMQ_USER}:${MSG_RABBITMQ_PASSWORD}@${MSG_RABBITMQ_HOST}:${MSG_RABBITMQ_PORT:-5672}

      # Security Settings
      - DISABLE_AUTHENTICATION_CHECKS=${DISABLE_AUTH_CHECKS:-True}
      - DISABLE_PERMISSIONS_CHECKS=${DISABLE_PERM_CHECKS:-True}
      - DISABLE_THROTTLING=${DISABLE_THROTTLING:-True}

    volumes:
      # Custom analyzers and connectors
      - ./intelowl/custom_analyzers:/opt/deploy/intelowl/custom_analyzers:ro
      - ./intelowl/custom_connectors:/opt/deploy/intelowl/custom_connectors:ro

      # BEV source code integration
      - ../../src:/opt/bev_src:ro

      # Static files
      - intelowl_static_data:/opt/deploy/static

      # Logs
      - ./logs:/var/log/intelowl

    command: celery -A intel_owl beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

    networks:
      - processing_core

    logging: *default-logging

    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # IntelOwl Celery Worker
  intelowl-celery-worker:
    image: intelowlproject/intelowl:v5.2.0
    container_name: bev_processing_celery_worker
    restart: always
    environment:
      # Django Configuration
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}

      # External Database Connections
      - POSTGRES_HOST=${DATA_CORE_POSTGRES_HOST}
      - POSTGRES_DB=${INTELOWL_POSTGRES_DB}
      - POSTGRES_USER=${INTELOWL_POSTGRES_USER}
      - POSTGRES_PASSWORD=${INTELOWL_POSTGRES_PASSWORD}
      - POSTGRES_PORT=${DATA_CORE_POSTGRES_PORT:-5432}

      # External Redis Connection
      - REDIS_URL=redis://:${DATA_CORE_REDIS_PASSWORD}@${DATA_CORE_REDIS_HOST}:${DATA_CORE_REDIS_PORT:-6379}/1

      # External RabbitMQ Connection
      - CELERY_BROKER_URL=amqp://${MSG_RABBITMQ_USER}:${MSG_RABBITMQ_PASSWORD}@${MSG_RABBITMQ_HOST}:${MSG_RABBITMQ_PORT:-5672}

      # Security Settings
      - DISABLE_AUTHENTICATION_CHECKS=${DISABLE_AUTH_CHECKS:-True}
      - DISABLE_PERMISSIONS_CHECKS=${DISABLE_PERM_CHECKS:-True}
      - DISABLE_THROTTLING=${DISABLE_THROTTLING:-True}

      # Proxy Configuration (if using Tor from Infrastructure node)
      - HTTP_PROXY=${TOR_PROXY:-}
      - HTTPS_PROXY=${TOR_PROXY:-}
      - TOR_PROXY=${TOR_PROXY:-}

      # External Graph Database
      - NEO4J_URI=${DATA_CORE_NEO4J_URI}
      - NEO4J_USER=${DATA_CORE_NEO4J_USER}
      - NEO4J_PASSWORD=${DATA_CORE_NEO4J_PASSWORD}

      # API Keys for OSINT Services
      - SHODAN_API_KEY=${SHODAN_API_KEY}
      - VIRUSTOTAL_API_KEY=${VIRUSTOTAL_API_KEY}
      - DEHASHED_API_KEY=${DEHASHED_API_KEY}
      - DEHASHED_EMAIL=${DEHASHED_EMAIL}
      - SNUSBASE_API_KEY=${SNUSBASE_API_KEY}
      - WELEAKINFO_API_KEY=${WELEAKINFO_API_KEY}

      # Worker Configuration
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKERS:-8}
      - CELERY_MAX_TASKS_PER_CHILD=${CELERY_MAX_TASKS:-100}

    volumes:
      # Custom analyzers and connectors
      - ./intelowl/custom_analyzers:/opt/deploy/intelowl/custom_analyzers:ro
      - ./intelowl/custom_connectors:/opt/deploy/intelowl/custom_connectors:ro

      # BEV source code integration
      - ../../src:/opt/bev_src:ro

      # Static files
      - intelowl_static_data:/opt/deploy/static

      # Logs
      - ./logs:/var/log/intelowl

    command: celery -A intel_owl worker -l info -c ${CELERY_WORKERS:-8} --max-tasks-per-child ${CELERY_MAX_TASKS:-100}

    networks:
      - processing_core

    logging: *default-logging

    deploy:
      replicas: ${CELERY_WORKER_REPLICAS:-2}
      resources:
        limits:
          memory: 6G
          cpus: '3.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # IntelOwl Nginx Reverse Proxy
  intelowl-nginx:
    image: nginx:alpine
    container_name: bev_processing_nginx
    restart: always
    depends_on:
      - intelowl-django
      - cytoscape-server
    volumes:
      # Nginx configuration
      - ./intelowl/nginx.conf:/etc/nginx/nginx.conf:ro

      # Static files from IntelOwl
      - intelowl_static_data:/usr/share/nginx/html/static:ro

      # Cytoscape visualization files
      - ./cytoscape:/usr/share/nginx/html/cytoscape:ro

      # Custom theme
      - ./intelowl/dark_theme.css:/usr/share/nginx/html/static/css/dark_theme.css:ro

      # SSL certificates (if using HTTPS)
      - ./ssl:/etc/nginx/ssl:ro

      # Logs
      - ./logs:/var/log/nginx

    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"

    networks:
      - processing_core

    logging: *default-logging

    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5

    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # =====================================================
  # CYTOSCAPE VISUALIZATION SERVER
  # =====================================================

  # Cytoscape.js Server for Graph Visualization
  cytoscape-server:
    build:
      context: ./cytoscape
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: bev_processing_cytoscape
    restart: always
    environment:
      # Node.js Environment
      NODE_ENV: production
      PORT: 3000

      # External Graph Database Connection (Data Core Node)
      NEO4J_URI: ${DATA_CORE_NEO4J_URI}
      NEO4J_USER: ${DATA_CORE_NEO4J_USER}
      NEO4J_PASSWORD: ${DATA_CORE_NEO4J_PASSWORD}

      # External PostgreSQL Connection (Data Core Node)
      POSTGRES_URI: postgresql://${INTELOWL_POSTGRES_USER}:${INTELOWL_POSTGRES_PASSWORD}@${DATA_CORE_POSTGRES_HOST}:${DATA_CORE_POSTGRES_PORT:-5432}/${INTELOWL_POSTGRES_DB}

      # Security Configuration
      JWT_SECRET: ${DJANGO_SECRET_KEY}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}

      # Performance Settings
      NODE_OPTIONS: --max-old-space-size=2048

    volumes:
      # Application source code
      - ./cytoscape:/app

      # Logs
      - ./logs:/app/logs

    ports:
      - "${CYTOSCAPE_PORT:-3000}:3000"

    networks:
      - processing_core

    logging: *default-logging

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # =====================================================
  # MCP SERVER (BEV Model Context Protocol)
  # =====================================================

  # BEV MCP Server for Advanced Analysis
  mcp-server:
    build:
      context: ../../src/mcp_server
      dockerfile: Dockerfile
      target: production
    container_name: bev_processing_mcp_server
    restart: always
    environment:
      # Server Configuration
      MCP_SERVER_HOST: 0.0.0.0
      MCP_SERVER_PORT: 3010

      # Security Configuration
      JWT_SECRET: ${JWT_SECRET}
      DATA_ENCRYPTION_KEY: ${DATA_ENCRYPTION_KEY}
      API_RATE_LIMIT: ${API_RATE_LIMIT:-100}
      API_RATE_WINDOW: ${API_RATE_WINDOW:-60}
      ALLOWED_NETWORKS: ${ALLOWED_NETWORKS:-172.20.0.0/16,127.0.0.1/32}

      # External Database Connections (Data Core Node)
      POSTGRES_URI: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DATA_CORE_POSTGRES_HOST}:${DATA_CORE_POSTGRES_PORT:-5432}/${POSTGRES_DB}
      NEO4J_URI: ${DATA_CORE_NEO4J_URI}
      NEO4J_USER: ${DATA_CORE_NEO4J_USER}
      NEO4J_PASSWORD: ${DATA_CORE_NEO4J_PASSWORD}
      REDIS_HOST: ${DATA_CORE_REDIS_HOST}
      REDIS_PORT: ${DATA_CORE_REDIS_PORT:-6379}
      REDIS_PASSWORD: ${DATA_CORE_REDIS_PASSWORD}
      ELASTICSEARCH_HOST: ${DATA_CORE_ELASTICSEARCH_HOST}
      ELASTICSEARCH_PORT: ${DATA_CORE_ELASTICSEARCH_PORT:-9200}

      # Connection Pool Settings
      POSTGRES_MIN_CONNECTIONS: ${POSTGRES_MIN_CONNECTIONS:-5}
      POSTGRES_MAX_CONNECTIONS: ${POSTGRES_MAX_CONNECTIONS:-20}
      REDIS_MAX_CONNECTIONS: ${REDIS_MAX_CONNECTIONS:-20}
      CONNECTION_TIMEOUT: ${CONNECTION_TIMEOUT:-30}
      QUERY_TIMEOUT: ${QUERY_TIMEOUT:-300}

      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      AUDIT_LOG_RETENTION_DAYS: ${AUDIT_LOG_RETENTION_DAYS:-90}

      # Performance Configuration
      SESSION_TIMEOUT: ${SESSION_TIMEOUT:-3600}
      JWT_EXPIRY_HOURS: ${JWT_EXPIRY_HOURS:-24}
      PASSWORD_MIN_LENGTH: ${PASSWORD_MIN_LENGTH:-12}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE:-10000000}

    volumes:
      # Configuration and logs
      - ./mcp_server/config:/app/config
      - ./logs:/var/log

      # Time synchronization
      - /etc/localtime:/etc/localtime:ro

    ports:
      - "${MCP_SERVER_PORT:-3010}:3010"

    networks:
      - processing_core

    logging: *default-logging

    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.25'

# =====================================================
# NETWORKS
# =====================================================

networks:
  processing_core:
    driver: bridge
    name: bev_processing_core
    ipam:
      config:
        - subnet: 172.20.0.0/16

# =====================================================
# VOLUMES
# =====================================================

volumes:
  # IntelOwl static files (CSS, JS, images)
  intelowl_static_data:
    driver: local
    name: bev_processing_intelowl_static